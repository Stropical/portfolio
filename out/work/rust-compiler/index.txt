1:"$Sreact.fragment"
2:I[7555,[],""]
3:I[1295,[],""]
4:I[6874,["992","static/chunks/992-a363d8e37b928a7f.js","421","static/chunks/app/work/rust-compiler/page-4abffae9ab665d9f.js"],""]
5:I[3063,["992","static/chunks/992-a363d8e37b928a7f.js","421","static/chunks/app/work/rust-compiler/page-4abffae9ab665d9f.js"],"Image"]
6:I[9665,[],"OutletBoundary"]
9:I[9665,[],"ViewportBoundary"]
b:I[9665,[],"MetadataBoundary"]
d:I[6614,[],""]
:HL["/portfolio/_next/static/media/e4af272ccee01ff0-s.p.woff2","font",{"crossOrigin":"","type":"font/woff2"}]
:HL["/portfolio/_next/static/css/cd6002490e004574.css","style"]
0:{"P":null,"b":"Zs-5tzM7382ORmqqRGD3b","p":"/portfolio","c":["","work","rust-compiler",""],"i":false,"f":[[["",{"children":["work",{"children":["rust-compiler",{"children":["__PAGE__",{}]}]}]},"$undefined","$undefined",true],["",["$","$1","c",{"children":[[["$","link","0",{"rel":"stylesheet","href":"/portfolio/_next/static/css/cd6002490e004574.css","precedence":"next","crossOrigin":"$undefined","nonce":"$undefined"}]],["$","html",null,{"lang":"en","className":"dark","children":["$","body",null,{"className":"min-h-screen bg-black font-sans antialiased __className_f07e2c","children":["$","$L2",null,{"parallelRouterKey":"children","error":"$undefined","errorStyles":"$undefined","errorScripts":"$undefined","template":["$","$L3",null,{}],"templateStyles":"$undefined","templateScripts":"$undefined","notFound":[[["$","title",null,{"children":"404: This page could not be found."}],["$","div",null,{"style":{"fontFamily":"system-ui,\"Segoe UI\",Roboto,Helvetica,Arial,sans-serif,\"Apple Color Emoji\",\"Segoe UI Emoji\"","height":"100vh","textAlign":"center","display":"flex","flexDirection":"column","alignItems":"center","justifyContent":"center"},"children":["$","div",null,{"children":[["$","style",null,{"dangerouslySetInnerHTML":{"__html":"body{color:#000;background:#fff;margin:0}.next-error-h1{border-right:1px solid rgba(0,0,0,.3)}@media (prefers-color-scheme:dark){body{color:#fff;background:#000}.next-error-h1{border-right:1px solid rgba(255,255,255,.3)}}"}}],["$","h1",null,{"className":"next-error-h1","style":{"display":"inline-block","margin":"0 20px 0 0","padding":"0 23px 0 0","fontSize":24,"fontWeight":500,"verticalAlign":"top","lineHeight":"49px"},"children":404}],["$","div",null,{"style":{"display":"inline-block"},"children":["$","h2",null,{"style":{"fontSize":14,"fontWeight":400,"lineHeight":"49px","margin":0},"children":"This page could not be found."}]}]]}]}]],[]],"forbidden":"$undefined","unauthorized":"$undefined"}]}]}]]}],{"children":["work",["$","$1","c",{"children":[null,["$","$L2",null,{"parallelRouterKey":"children","error":"$undefined","errorStyles":"$undefined","errorScripts":"$undefined","template":["$","$L3",null,{}],"templateStyles":"$undefined","templateScripts":"$undefined","notFound":"$undefined","forbidden":"$undefined","unauthorized":"$undefined"}]]}],{"children":["rust-compiler",["$","$1","c",{"children":[null,["$","$L2",null,{"parallelRouterKey":"children","error":"$undefined","errorStyles":"$undefined","errorScripts":"$undefined","template":["$","$L3",null,{}],"templateStyles":"$undefined","templateScripts":"$undefined","notFound":"$undefined","forbidden":"$undefined","unauthorized":"$undefined"}]]}],{"children":["__PAGE__",["$","$1","c",{"children":[["$","div",null,{"className":"min-h-screen bg-black text-white","children":[["$","header",null,{"className":"sticky top-0 z-50 w-full border-b border-white/10 bg-black/95 backdrop-blur supports-[backdrop-filter]:bg-black/60","children":["$","div",null,{"className":"container flex h-14 items-center justify-between","children":[["$","$L4",null,{"className":"text-lg font-bold","href":"/","children":"ETHAN MARREEL"}],["$","$L4",null,{"href":"/","children":["$","button",null,{"className":"inline-flex items-center justify-center gap-2 whitespace-nowrap rounded-md text-sm font-medium ring-offset-background transition-colors focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2 disabled:pointer-events-none disabled:opacity-50 [&_svg]:pointer-events-none [&_svg]:size-4 [&_svg]:shrink-0 hover:bg-accent h-10 px-4 py-2 text-white hover:text-gray-300","ref":"$undefined","children":[["$","svg",null,{"ref":"$undefined","xmlns":"http://www.w3.org/2000/svg","width":24,"height":24,"viewBox":"0 0 24 24","fill":"none","stroke":"currentColor","strokeWidth":2,"strokeLinecap":"round","strokeLinejoin":"round","className":"lucide lucide-arrow-left h-4 w-4 mr-2","children":[["$","path","1l729n",{"d":"m12 19-7-7 7-7"}],["$","path","x3x0zl",{"d":"M19 12H5"}],"$undefined"]}],"Back to Portfolio"]}]}]]}]}],["$","main",null,{"className":"py-20","children":["$","div",null,{"className":"container px-4 max-w-6xl","children":[["$","div",null,{"className":"mb-16","children":[["$","div",null,{"className":"flex flex-wrap gap-2 mb-6","children":[["$","div",null,{"className":"inline-flex items-center rounded-full border px-2.5 py-0.5 text-xs font-semibold transition-colors focus:outline-none focus:ring-2 focus:ring-ring focus:ring-offset-2 border-[#FF3366]/30 text-gray-300","children":"Rust"}],["$","div",null,{"className":"inline-flex items-center rounded-full border px-2.5 py-0.5 text-xs font-semibold transition-colors focus:outline-none focus:ring-2 focus:ring-ring focus:ring-offset-2 border-[#FF3366]/30 text-gray-300","children":"LLVM"}],["$","div",null,{"className":"inline-flex items-center rounded-full border px-2.5 py-0.5 text-xs font-semibold transition-colors focus:outline-none focus:ring-2 focus:ring-ring focus:ring-offset-2 border-[#FF3366]/30 text-gray-300","children":"Compiler Design"}],["$","div",null,{"className":"inline-flex items-center rounded-full border px-2.5 py-0.5 text-xs font-semibold transition-colors focus:outline-none focus:ring-2 focus:ring-ring focus:ring-offset-2 border-[#FF3366]/30 text-gray-300","children":"PineScript"}],["$","div",null,{"className":"inline-flex items-center rounded-full border px-2.5 py-0.5 text-xs font-semibold transition-colors focus:outline-none focus:ring-2 focus:ring-ring focus:ring-offset-2 border-[#FF3366]/30 text-gray-300","children":"IR Generation"}]]}],["$","h1",null,{"className":"text-5xl font-bold mb-6","children":"Custom Rust Compiler"}],["$","p",null,{"className":"text-xl text-gray-300 leading-relaxed mb-8","children":"A sophisticated PineScript compiler driver developed in Rust that translates trading strategy scripts into optimized LLVM Intermediate Representation (IR) for high-performance execution in financial applications."}]]}],["$","div",null,{"className":"mb-16","children":["$","div",null,{"className":"relative w-full h-[500px] rounded-lg overflow-hidden","children":["$","$L5",null,{"src":"/images/rust-compiler.png","alt":"Custom Rust Compiler Architecture","fill":true,"className":"object-contain"}]}]}],["$","div",null,{"className":"grid md:grid-cols-2 gap-12 mb-16","children":[["$","div",null,{"children":[["$","h2",null,{"className":"text-3xl font-bold mb-6","children":"Project Overview"}],["$","p",null,{"className":"text-gray-300 leading-relaxed mb-4","children":"This custom compiler project bridges the gap between high-level PineScript trading strategies and low-level machine code execution. Built entirely in Rust, the compiler provides a complete toolchain for parsing, analyzing, optimizing, and generating efficient code for financial trading algorithms."}],["$","ul",null,{"className":"text-gray-300 leading-relaxed space-y-2","children":[["$","li",null,{"children":"• Complete PineScript language parser and lexer"}],["$","li",null,{"children":"• Abstract Syntax Tree (AST) generation and optimization"}],["$","li",null,{"children":"• LLVM IR code generation for multiple target architectures"}],["$","li",null,{"children":"• Advanced optimization passes for trading algorithm performance"}],["$","li",null,{"children":"• Runtime library for financial data structures and operations"}]]}]]}],["$","div",null,{"children":[["$","h2",null,{"className":"text-3xl font-bold mb-6","children":"Technical Architecture"}],["$","ul",null,{"className":"text-gray-300 leading-relaxed space-y-2","children":[["$","li",null,{"children":["• ",["$","strong",null,{"children":"Frontend:"}]," Recursive descent parser with error recovery"]}],["$","li",null,{"children":["• ",["$","strong",null,{"children":"Middle-end:"}]," AST optimization and analysis passes"]}],["$","li",null,{"children":["• ",["$","strong",null,{"children":"Backend:"}]," LLVM IR generation and optimization"]}],["$","li",null,{"children":["• ",["$","strong",null,{"children":"Runtime:"}]," Minimal runtime for trading operations"]}],["$","li",null,{"children":["• ",["$","strong",null,{"children":"Tooling:"}]," Debugger, profiler, and analysis tools"]}],["$","li",null,{"children":["• ",["$","strong",null,{"children":"Testing:"}]," Comprehensive test suite with fuzzing"]}]]}]]}]]}],["$","div",null,{"className":"mb-16","children":[["$","h2",null,{"className":"text-3xl font-bold mb-8","children":"Compiler Pipeline & Implementation"}],["$","div",null,{"className":"space-y-8","children":[["$","div",null,{"className":"border border-gray-800 rounded-lg p-6","children":[["$","h3",null,{"className":"text-xl font-bold mb-4 text-[#FF3366]","children":"Lexical Analysis & Parsing"}],["$","p",null,{"className":"text-gray-300 leading-relaxed","children":"The frontend implements a complete lexer and recursive descent parser for PineScript syntax. Advanced error recovery techniques provide meaningful error messages and continue parsing after syntax errors. The parser generates a detailed Abstract Syntax Tree with full source location information for debugging and error reporting."}]]}],["$","div",null,{"className":"border border-gray-800 rounded-lg p-6","children":[["$","h3",null,{"className":"text-xl font-bold mb-4 text-[#FF3366]","children":"Semantic Analysis & Optimization"}],["$","p",null,{"className":"text-gray-300 leading-relaxed","children":"The middle-end performs comprehensive semantic analysis including type checking, symbol resolution, and control flow analysis. Multiple optimization passes eliminate dead code, inline functions, and optimize trading-specific operations like technical indicator calculations. The optimizer is specifically tuned for financial algorithm patterns."}]]}],["$","div",null,{"className":"border border-gray-800 rounded-lg p-6","children":[["$","h3",null,{"className":"text-xl font-bold mb-4 text-[#FF3366]","children":"LLVM IR Code Generation"}],["$","p",null,{"className":"text-gray-300 leading-relaxed","children":"The backend translates the optimized AST into efficient LLVM Intermediate Representation. Custom code generation strategies handle PineScript's unique features like series data types, historical references, and real-time execution models. The generated IR is further optimized by LLVM's optimization passes before final code generation."}]]}]]}]]}],["$","div",null,{"className":"mb-16","children":[["$","h2",null,{"className":"text-3xl font-bold mb-8","children":"Performance & Capabilities"}],["$","div",null,{"className":"grid md:grid-cols-4 gap-8 mb-8","children":[["$","div",null,{"className":"text-center","children":[["$","div",null,{"className":"text-4xl font-bold text-[#FF3366] mb-2","children":"10x"}],["$","div",null,{"className":"text-gray-300","children":"Performance Gain"}]]}],["$","div",null,{"className":"text-center","children":[["$","div",null,{"className":"text-4xl font-bold text-[#FF3366] mb-2","children":"<1ms"}],["$","div",null,{"className":"text-gray-300","children":"Compilation Time"}]]}],["$","div",null,{"className":"text-center","children":[["$","div",null,{"className":"text-4xl font-bold text-[#FF3366] mb-2","children":"95%"}],["$","div",null,{"className":"text-gray-300","children":"PineScript Coverage"}]]}],["$","div",null,{"className":"text-center","children":[["$","div",null,{"className":"text-4xl font-bold text-[#FF3366] mb-2","children":"0"}],["$","div",null,{"className":"text-gray-300","children":"Runtime Dependencies"}]]}]]}],["$","div",null,{"className":"grid md:grid-cols-2 gap-8","children":[["$","div",null,{"className":"border border-gray-800 rounded-lg p-6","children":[["$","h3",null,{"className":"text-xl font-bold mb-4","children":"Language Features"}],["$","ul",null,{"className":"text-gray-300 leading-relaxed space-y-2","children":[["$","li",null,{"children":"• Complete PineScript v5 syntax support"}],["$","li",null,{"children":"• Advanced type system with inference"}],["$","li",null,{"children":"• Series data types and historical operators"}],["$","li",null,{"children":"• Built-in technical analysis functions"}]]}]]}],["$","div",null,{"className":"border border-gray-800 rounded-lg p-6","children":[["$","h3",null,{"className":"text-xl font-bold mb-4","children":"Optimization Features"}],["$","ul",null,{"className":"text-gray-300 leading-relaxed space-y-2","children":[["$","li",null,{"children":"• Loop unrolling for indicator calculations"}],["$","li",null,{"children":"• Vectorization of mathematical operations"}],["$","li",null,{"children":"• Memory layout optimization for time series"}],["$","li",null,{"children":"• Branch prediction optimization"}]]}]]}]]}]]}],["$","div",null,{"className":"mb-16","children":[["$","h2",null,{"className":"text-3xl font-bold mb-8","children":"Technical Challenges & Solutions"}],["$","div",null,{"className":"grid md:grid-cols-2 gap-8","children":[["$","div",null,{"className":"border border-gray-800 rounded-lg p-6","children":[["$","h3",null,{"className":"text-xl font-bold mb-4","children":"Series Data Model"}],["$","p",null,{"className":"text-gray-300 leading-relaxed","children":"PineScript's unique series data model requires special handling in the compiler. Implemented efficient memory management for historical data access patterns and optimized the runtime for real-time streaming operations."}]]}],["$","div",null,{"className":"border border-gray-800 rounded-lg p-6","children":[["$","h3",null,{"className":"text-xl font-bold mb-4","children":"Real-time Execution"}],["$","p",null,{"className":"text-gray-300 leading-relaxed","children":"Trading algorithms must execute with minimal latency. The compiler generates code with predictable execution times and minimal memory allocations to ensure consistent performance in live trading environments."}]]}],["$","div",null,{"className":"border border-gray-800 rounded-lg p-6","children":[["$","h3",null,{"className":"text-xl font-bold mb-4","children":"Error Handling"}],["$","p",null,{"className":"text-gray-300 leading-relaxed","children":"Comprehensive error handling throughout the compilation pipeline provides clear diagnostics for syntax errors, type mismatches, and runtime issues. Advanced error recovery enables continued compilation after errors."}]]}],["$","div",null,{"className":"border border-gray-800 rounded-lg p-6","children":[["$","h3",null,{"className":"text-xl font-bold mb-4","children":"Cross-platform Support"}],["$","p",null,{"className":"text-gray-300 leading-relaxed","children":"LLVM backend enables compilation to multiple target architectures including x86_64, ARM, and WebAssembly for deployment across different trading platforms and environments."}]]}]]}]]}],["$","div",null,{"className":"mb-16","children":[["$","h2",null,{"className":"text-3xl font-bold mb-8","children":"Applications & Use Cases"}],["$","div",null,{"className":"grid md:grid-cols-3 gap-8","children":[["$","div",null,{"className":"border border-gray-800 rounded-lg p-6","children":[["$","h3",null,{"className":"text-xl font-bold mb-4","children":"High-Frequency Trading"}],["$","p",null,{"className":"text-gray-300 leading-relaxed","children":"Compiled trading strategies achieve microsecond execution times critical for high-frequency trading applications."}]]}],["$","div",null,{"className":"border border-gray-800 rounded-lg p-6","children":[["$","h3",null,{"className":"text-xl font-bold mb-4","children":"Backtesting Systems"}],["$","p",null,{"className":"text-gray-300 leading-relaxed","children":"Optimized code enables rapid backtesting of strategies across large historical datasets with minimal computational overhead."}]]}],["$","div",null,{"className":"border border-gray-800 rounded-lg p-6","children":[["$","h3",null,{"className":"text-xl font-bold mb-4","children":"Research Platforms"}],["$","p",null,{"className":"text-gray-300 leading-relaxed","children":"Academic and institutional research benefits from fast iteration cycles and performance analysis capabilities."}]]}]]}]]}]]}]}]]}],"$undefined",null,["$","$L6",null,{"children":["$L7","$L8",null]}]]}],{},null,false]},null,false]},null,false]},null,false],["$","$1","h",{"children":[null,["$","$1","Xjp6bORZP3o8PKManVNK2",{"children":[["$","$L9",null,{"children":"$La"}],["$","meta",null,{"name":"next-size-adjust","content":""}]]}],["$","$Lb",null,{"children":"$Lc"}]]}],false]],"m":"$undefined","G":["$d","$undefined"],"s":false,"S":true}
a:[["$","meta","0",{"charSet":"utf-8"}],["$","meta","1",{"name":"viewport","content":"width=device-width, initial-scale=1"}]]
7:null
8:null
c:[["$","title","0",{"children":"Ethan Marreel - Robotics and Full Stack Engineer"}],["$","meta","1",{"name":"description","content":"Robotics and Full Stack Engineer with 3+ years delivering ML-driven, low-latency, and production-grade solutions across financial trading, robotics simulation, embedded FPGA DSP, and healthcare compliance."}]]
